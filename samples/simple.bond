/*
* This is a multi-line comment
*/

// This is a single-line comment

// This defined the namespace for this bond file
namespace SampleNamespace.Test

// This is an import statement
import "../test/test"

// This is an example of forward declaration 
struct SampleStruct;

// This is an example of using type aliases
using ListOfInts = list<int>;

// This is an example of using creating a generic type
struct SampleStruct<A, B> : Base {
	0: string SampleField = nothing;
	1: int test;
	2: optional<string> test;
	3: uint32 test;
	4: map<string, int> map;
	5: bonded<SampleStruct> bonded;

	// This is an attribute
	[Validate("true")]
	6: nullable<SampleStruct> bonded2;
	7: nullable<bonded<string>> bondedOptional;
}

struct SimpleView view_of SampleStruct {
	SampleField, bonded;
}

// This is an attribute on a struct
[Test("True")]
struct StructWithAttribute {
	0: set<string> Strings;
}

enum SimpleEnumeration {
	TCP,
	UDP = 10
}

struct UsingEnumeration {
	0: SimpleEnumeration value = TCP;
}
